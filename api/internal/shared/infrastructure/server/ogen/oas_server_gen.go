// Code generated by ogen, DO NOT EDIT.

package ogen

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// StartAuthSignUp implements startAuthSignUp operation.
	//
	// Starts the OAuth 2.0 authentication flow with the specified provider (Google, GitHub, etc.).
	// On success, returns an authentication URL where the user should be redirected, and a state
	// parameter to prevent CSRF attacks.
	// This endpoint is primarily intended for calls from web frontends or CLI tools.
	//
	// POST /auth/sign-up/{provider}
	StartAuthSignUp(ctx context.Context, req OptSignUpRequest, params StartAuthSignUpParams) (StartAuthSignUpRes, error)
	// NewError creates *SignUpErrorResponseStatusCode from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *SignUpErrorResponseStatusCode
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
