//go:build !wireinject
// +build !wireinject

// Code generated by Wire. DO NOT EDIT.

package wire

import (
	"log/slog"

	"github.com/hexabase/hexabase-ai/api/internal/api/handlers"
	applicationHandler "github.com/hexabase/hexabase-ai/api/internal/application/handler"
	authHandler "github.com/hexabase/hexabase-ai/api/internal/auth/handler"
	backupHandler "github.com/hexabase/hexabase-ai/api/internal/backup/handler"
	functionHandler "github.com/hexabase/hexabase-ai/api/internal/function/handler"
	logsDomain "github.com/hexabase/hexabase-ai/api/internal/logs/domain"
	monitoringHandler "github.com/hexabase/hexabase-ai/api/internal/monitoring/handler"
	nodeHandler "github.com/hexabase/hexabase-ai/api/internal/node/handler"
	orgHandler "github.com/hexabase/hexabase-ai/api/internal/organization/handler"
	projectHandler "github.com/hexabase/hexabase-ai/api/internal/project/handler"
	"github.com/hexabase/hexabase-ai/api/internal/shared/config"
	workspaceHandler "github.com/hexabase/hexabase-ai/api/internal/workspace/handler"
	"gorm.io/gorm"
	"k8s.io/client-go/dynamic"
	"k8s.io/client-go/kubernetes"
	"k8s.io/client-go/rest"
)

type App struct {
	ApplicationHandler  *applicationHandler.ApplicationHandler
	AuthHandler        *authHandler.Handler
	BackupHandler      *backupHandler.Handler
	BillingHandler     *handlers.BillingHandler
	MonitoringHandler  *monitoringHandler.Handler
	NodeHandler        *nodeHandler.Handler
	OrganizationHandler *orgHandler.Handler
	ProjectHandler     *projectHandler.Handler
	WorkspaceHandler   *workspaceHandler.Handler
	CICDHandler        *handlers.CICDHandler
	FunctionHandler    *functionHandler.Handler
	AIOpsProxyHandler  *handlers.AIOpsProxyHandler
	InternalHandler    *handlers.InternalHandler
	LogSvc             logsDomain.Service
}

// Temporary stub implementation for testing
func InitializeApp(cfg *config.Config, db *gorm.DB, k8sClient kubernetes.Interface, dynamicClient dynamic.Interface, k8sConfig *rest.Config, logger *slog.Logger) (*App, error) {
	panic("wire: generate failed - this is a temporary stub")
}