version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: hexabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  # Use 5433 to avoid conflict
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hexabase

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Use 6380 to avoid conflict
    volumes:
      - redis_data:/data
    networks:
      - hexabase

  # NATS message queue
  nats:
    image: nats:2.10-alpine
    ports:
      - "4223:4222"  # Use 4223 to avoid conflict
      - "8223:8222"  # Use 8223 for monitoring
    command: ["--jetstream", "--store_dir=/data"]
    volumes:
      - nats_data:/data
    networks:
      - hexabase

  # API Server
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_DBNAME=hexabase
      - DATABASE_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NATS_URL=nats://nats:4222
      - AUTH_JWT_SECRET=dev-jwt-secret-change-in-production
      - STRIPE_SECRET_KEY=sk_test_your_key_here
      - STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret
      - GIN_MODE=debug
    depends_on:
      - postgres
      - redis
      - nats
    networks:
      - hexabase
    volumes:
      - ./api/config.yaml:/root/config.yaml:ro

  # Worker
  worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    command: ["./worker"]
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_DBNAME=hexabase
      - DATABASE_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NATS_URL=nats://nats:4222
      - AUTH_JWT_SECRET=dev-jwt-secret-change-in-production
    depends_on:
      - postgres
      - redis
      - nats
    networks:
      - hexabase
    volumes:
      - ./api/config.yaml:/root/config.yaml:ro

volumes:
  postgres_data:
  redis_data:
  nats_data:

networks:
  hexabase:
    driver: bridge