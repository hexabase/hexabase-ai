# GitLab CI/CD Pipeline Configuration
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  REGISTRY: registry.gitlab.com
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA

stages:
  - test
  - security
  - build
  - deploy

test:unit:
  stage: test
  image: golang:1.21
  script:
    - go test -v -race ./...
  coverage: '/total:\s+\(statements\)\s+(\d+.\d+)%/'

test:integration:
  stage: test
  services:
    - postgres:14
    - redis:7
  script:
    - go test -tags=integration ./...

security:scan:
  stage: security
  image: aquasec/trivy:latest
  script:
    - trivy fs --exit-code 1 --severity HIGH,CRITICAL .

build:images:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker buildx create --use
    - docker buildx build --platform linux/amd64,linux/arm64 
        --tag $CI_REGISTRY_IMAGE:$IMAGE_TAG 
        --tag $CI_REGISTRY_IMAGE:latest 
        --push ./api

deploy:staging:
  stage: deploy
  image: alpine/helm:latest
  environment:
    name: staging
    url: https://staging.hexabase.ai
  only:
    - develop
  script:
    - helm upgrade --install hexabase-ai ./deployments/helm/hexabase-ai
        --namespace hexabase-staging
        --values ./deployments/helm/values-staging.yaml
        --set image.tag=$IMAGE_TAG

deploy:production:
  stage: deploy
  image: alpine/helm:latest
  environment:
    name: production
    url: https://hexabase.ai
  when: manual
  only:
    - tags
  script:
    - helm upgrade --install hexabase-ai ./deployments/helm/hexabase-ai
        --namespace hexabase-system
        --values ./deployments/helm/values-production.yaml
        --set image.tag=$CI_COMMIT_TAG